<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Some machines may treat tiles differently with interpolation on (we'll switch it back on for large scaled images etc.)
texture_set_interpolation(false);

// Variables for game saving
lastCheckpointRoom = room;
persistanceEvents = ds_list_create();

// Variables for pausing the game
isPaused = false;       // Game is actually paused
userPaused = false;     // User commanded pause
forcePaused = true;     // Something forced pause

// Setup water animation
AnimationInit(0, 10, Animation.loop, bckAnimationWater1, bckAnimationWater2, bckAnimationWater3, bckAnimationWater4, bckAnimationWater5);
AnimationOrder(0, 1, 2, 3, 2, 1, 4, 5, 4);

// Setup flower animation
AnimationInit(1, 30, Animation.loop, bckAnimationFlowers1, bckAnimationFlowers2);
AnimationOrder(1, 1, 2);

// Setup torch animation
AnimationInit(2, 10, Animation.loop, bckAnimationTorch1, bckAnimationTorch2, bckAnimationTorch3, bckAnimationTorch4, bckAnimationTorch5);
AnimationOrder(2, 1, 2, 3, 4, 5);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//-----------------------------------------------------------------------------
// Hotkey saving
if (keyboard_check_pressed(vk_f5))
    SaveGame(global.saveFile);

//-----------------------------------------------------------------------------
// Pausing

// Toggle
if ((keyboard_check_pressed(KEY_INVENTORY_OPEN))
|| (keyboard_check_pressed(vk_escape)))
&amp;&amp; (!instance_exists(objTransition))
&amp;&amp; (!instance_exists(objDialogueBox))
&amp;&amp; (objPlayer.life &gt; 0)
    {
    if (!objInventory.visible)
    &amp;&amp; (!objOptions.visible)
    &amp;&amp; (!objSaveLoad.visible)
        {
        with (parPauseMenu) on = onTitle;
        with (objInventory) selection = 0;
            
        if (keyboard_check_pressed(KEY_INVENTORY_OPEN))
            objInventory.visible = true;
        if (keyboard_check_pressed(vk_escape))
            objSaveLoad.visible = true;
        }
    else with (parPauseMenu)
        visible = false;
    }

// Something else requires a force pause
forcePaused = (instance_exists(objTransition));
with (objInventory)    objGame.forcePaused |= visible;
with (objOptions)      objGame.forcePaused |= visible;
with (objSaveLoad)     objGame.forcePaused |= visible;
with (objConfirmation) objGame.forcePaused |= visible;

// User decides to pause
if (keyboard_check_pressed(KEY_PAUSE))
    userPaused ^= true;

// Actually pause
isPaused = (userPaused | forcePaused);

// Do animations
if (!isPaused)
    {
    AnimationAnimate(0);
    AnimationAnimate(1);
    AnimationAnimate(2);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (global.loadGame)
    {
    global.loadGame = false;
    lastCheckpointRoom = room;
    
    if (instance_exists(objCheckpoint))
        {
        objPlayerCharacter.x = objCheckpoint.x;
        objPlayerCharacter.y = objCheckpoint.y;
        }
    }

else
    {
    if (instance_exists(objCheckpoint))
        {
        lastCheckpointRoom = room;
        SaveGame(global.autoFile);
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Reset drawing (to fix automatic sprite drawing, which for some reason picks up alpha changes)
draw_set_color(c_white);
draw_set_alpha(1.0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
