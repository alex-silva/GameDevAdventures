<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
//  This object handles music changes that can be defined per room (See step event).
//  This object is also easily portable to another project, as the only connection is
//  room and music resource names, just change these for a different project!
//

currentTrack = -1;      // The track that should currently be playing
previousTrack = -1;     // The track that was playing before the current one
fadeTrack = -1;         // The track that we have stopped playing and are fading out
endFade = -1;           // Holds number of steps we've been fading

// NOTE:
// Actually fading audio is measured in miliseconds,
// where our timer measures in steps.
// So remember, (steps)room_speed and (miliseconds)1000 both equal 1 second

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Select which music track should be playing
//switch (room)
    //{
    //case (rmTown):    currentTrack = musicTown; break;
    //case (rmForest):  currentTrack = musicForest; break;
    //case (rmDungeon): currentTrack = musicDungeon; break;
    //}


// If there is a track selected
if (currentTrack != -1)
    {
    // If we switched track while another track is still fading out
    if (currentTrack != previousTrack) &amp;&amp; (endFade &gt;= 0)
        {
        audio_stop_sound(fadeTrack);
        show_debug_message("Audio: Stopped early!");
        }
    
    // The correct track is not yet playing
    if (!audio_is_playing(currentTrack))
        {
        // Fade out previous track
        if (previousTrack != -1)
            {
            audio_sound_gain(previousTrack, 0.0, 1000);
            fadeTrack = previousTrack;
            endFade = room_speed;
            show_debug_message("Audio: Fading OUT previous track!");
            }
            
        // Fade in new track
        audio_play_sound(currentTrack, 0, true);
        audio_sound_gain(currentTrack, 0.0, 0);
        audio_sound_gain(currentTrack, 1.0, 1000);
        show_debug_message("Audio: Fading IN new track!");
        
        // Remember, so we can fade it out later
        previousTrack = currentTrack;
        }
    }

// The track fading out has finished, stop it
if (endFade-- == 0)
    audio_stop_sound(fadeTrack);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
