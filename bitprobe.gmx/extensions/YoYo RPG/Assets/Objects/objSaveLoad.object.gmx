<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>parPauseMenu</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Window sizes
width = 7*128;
height = 4*128;

onTitle = 0;
onSaveContButton = 1;
onSaveQuitButton = 2;
onLoadButton = 3;
onCloseButton = 4;

on = onTitle;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (visible)
&amp;&amp; (!instance_exists(objConfirmation))
    {
    if (keyboard_check_pressed(vk_right))
        {
        if (on == onTitle)
            {
            visible = false;
            objInventory.visible = true;
            }
        }
        
    if (keyboard_check_pressed(vk_up))
        {
        switch (on)
            {
            case (onSaveContButton): on = onTitle; break;
            case (onSaveQuitButton): on = onSaveContButton; break;
            case (onLoadButton):     on = onSaveQuitButton; break;
            case (onCloseButton):    on = onLoadButton; break;
            }
        }
    
    if (keyboard_check_pressed(vk_down))
        {
        switch (on)
            {
            case (onTitle):          on = onSaveContButton; break;
            case (onSaveContButton): on = onSaveQuitButton; break;
            case (onSaveQuitButton): on = onLoadButton; break;
            case (onLoadButton):     on = onCloseButton; break;
            }
        }
        
    if (keyboard_check_pressed(ord("Z")) || keyboard_check_pressed(ord("X")))
        {
        switch (on)
            {
            case (onSaveContButton):
                SaveGame(global.saveFile);
                visible = false;
                var _confirmation = instance_create(0, 0, objConfirmation);
                _confirmation.message = "Saved sucessfully!";
                _confirmation.useOkay = true;
                break;
            case (onSaveQuitButton):
                SaveGame(global.saveFile);
                var _confirmation = instance_create(0, 0, objConfirmation);
                _confirmation.message = "Saved sucessfully!";
                _confirmation.useOkay = true;
                _confirmation.exeYes = ConfirmSave;
                break;
            case (onLoadButton):
                var _confirmation = instance_create(0, 0, objConfirmation);
                _confirmation.message = "Are you sure you want to return to the load screen? Unsaved progress will be lost!";
                _confirmation.exeYes = ConfirmLoad;
                break;
            case (onCloseButton):    visible = false; break;
            }
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (visible)
    {
    // Darken the screen to emphisize focus
    draw_set_color(c_black);
    draw_set_alpha(0.5);
    draw_rectangle(0, 0, display_get_gui_width(), display_get_gui_height(), false);
    
    // Work out position on screen (center)
    var _xPos, _yPos, _seperation, _icon;
    _seperation = 48;
    _halfSep = _seperation/2;
    _xPos = display_get_gui_width()*0.5-width*0.5;
    _yPos = display_get_gui_height()*0.5-height*0.5;
    
    // Draw Panel
    DrawPanel(_xPos, _yPos, width, height, true, true);
    
    // Draw panel selection
    DrawButton("Inventory", 0,           _xPos+width*0.5,     _yPos);
    DrawButton("Save/Load", on==onTitle, _xPos+width*0.5-206, _yPos);
    DrawButton("Options",   0,           _xPos+width*0.5+206, _yPos);
    
    // Buttons
    DrawButtonLong("Save and Continue", on==onSaveContButton, _xPos+width*0.5, _yPos+height*0.5-80);
    DrawButtonLong("Save and Quit",     on==onSaveQuitButton, _xPos+width*0.5, _yPos+height*0.5);
    DrawButtonLong("Load",            on==onLoadButton,     _xPos+width*0.5, _yPos+height*0.5+80);
    
    // Draw the exit button
    DrawButton("Close", on==onCloseButton, _xPos+width*0.5, _yPos+height-48);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
