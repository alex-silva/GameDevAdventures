<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//mydatetime = date_create_datetime(2011, 9, 15, 9, 43, 30);
//score = date_time_string( mydatetime );
//alarm[0] = room_speed/10; 
gui_x[0] = 50;
gui_y[0] = 50

// Variáveis de tempo
minutes = 0;
seconds = 0;

// Variáveis de controle
timer = false;
save = false;

if(file_exists("s_data.dat")) 
    s_map = ds_map_secure_load("s_data.dat"); 
else 
    s_map = ds_map_create(); 

//room_get_name(room); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(save == true){
    ds_map_secure_save(s_map,"s_data.dat");
//room_get_name(room); 
}
else{
    if(timer == true)
    {
        seconds += 1/room_speed;
    }
    
    if(seconds &lt; 60 &amp;&amp; seconds &gt; 59.9)
    {
        seconds = 0;
        minutes += 1;
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Habilita o temporizador ao iniciar a Room
timer = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(timer == true)
{
    str_m = string(minutes);
    str_s = string(floor(seconds));
    //str_ms = string(mseconds);
    if(minutes&lt;10) str_m = "0"+str_m; 
    if(seconds&lt;10) str_s = "0"+str_s; 
    //if(mseconds&lt;100) str_ms = "0"+str_ms; 
    //if(mseconds&lt;10) str_ms = "0"+str_ms; 
    draw_rectangle_colour(20, 20, 130, 60, c_white, c_white, c_white, c_white, false); 
    draw_set_halign(fa_left);
    draw_set_valign(fa_top); 
    draw_text_transformed(25, 25, str_m+":"+str_s, 2, 2, 0);
    
    
    //display_get_gui_height(); 
    //display_get_gui_width();
    //draw_text(10,10,str_m+":"+str_s);
    //draw_highscore(100, 100, room_width - 100, room_height - 100); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
