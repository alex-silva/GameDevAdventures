<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerWhiteMove</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variáveis do player
//if (global.playerRed)
  //  cor = Cor.Red
//else if (global.playerGreen)
  //  cor = Cor.Green
//else if (global.playerBlue)
  //  cor = Cor.Blue
//else
    cor = Cor.White

playerGravity = 0.75;
horizontalSpeed = 0;
verticalSpeed = 0;
jumpSpeed = 12;
moveSpeed = 7;

image_speed = 0.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroi Instância do player e volta ao início
instance_destroy();
instance_create(objDoorStart.x, objDoorStart.y, objPlayer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Define velocidade e colisões com paredes

// player visível apenas quando vivo
visible = global.playerVivo;

if (global.playerVivo)
{
    // Define movimentação
    move = KEY_RIGHT - KEY_LEFT;
    horizontalSpeed = move * moveSpeed;
    if (verticalSpeed &lt; 10) verticalSpeed += playerGravity;
    
    // Faz personagem Pular se cor for igual a barrier, ou se estiver no solo
    if (place_meeting(x, y + 1, objFloor) &amp;&amp; scrCollisionCor(self.cor, objFloor.cor))
            verticalSpeed = KEY_JUMP * -jumpSpeed;
    
    //Colisão Horizontal
    if (place_meeting(x + horizontalSpeed, y, objFloor)
    &amp;&amp; scrCollisionCor(self.cor, objFloor.cor))
    {
        while(!place_meeting(x + sign(horizontalSpeed), y, objFloor))
        {
            x += sign(horizontalSpeed);
        }
        horizontalSpeed = 0;
    }
    
    //Colisão vertical
    if (place_meeting(x, y + verticalSpeed, objFloor)
    &amp;&amp; scrCollisionCor(self.cor, objFloor.cor))
    {
        while(!place_meeting(x, y + sign(verticalSpeed), objFloor))
        {
            y += sign(verticalSpeed);
        }
        verticalSpeed = 0;
    }
    
    // Define movimentação caso não colida com objetos    
    x += horizontalSpeed;    
    y += verticalSpeed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Anima sprite
playerDirection = Direcao.Right;
if (global.playerVivo)
{
    if (horizontalSpeed &gt; 0)
    {
        if verticalSpeed &lt; 0
            playerDirection = Direcao.JumpRight;      
        else if verticalSpeed &gt;= 0 
            playerDirection = Direcao.Right;
    }
    else if horizontalSpeed &lt; 0
    {
        if verticalSpeed &lt; 0
           playerDirection = Direcao.JumpLeft;
        else if verticalSpeed &gt;= 0 
           playerDirection = Direcao.Left
    }
    else image_index = 0;
}
global.playerDirection = playerDirection;
sprite_index = scrTrocaSprite();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Habilita alternancia de cor
switch(other.powerup_Cor)
{
    case cor_Red   : global.player_Hab_R = true; break;
    case cor_Green : global.player_Hab_G = true; break;
    case cor_Blue  : global.player_Hab_B = true; break;
}
with (other) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Sphere">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Colisão com sphere e teletransporta
//scr_Colide_Sphere(other.sphere_Cor, other.x, other.y, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSpike">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Colisão com spike
if (scrCollisionCor(cor, other.cor))
    scrCollisionDeath();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Muda cor para azul
if(global.playerBlue)
{
    self.cor = Cor.Blue;
    sprite_index = scrTrocaSprite();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Muda cor para verde
if(global.playerGreen)
{
    self.cor = Cor.Green;
    sprite_index = scrTrocaSprite();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Muda cor para vermelho
if(global.playerRed)
{
    self.cor = Cor.Red;
    sprite_index = scrTrocaSprite();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
