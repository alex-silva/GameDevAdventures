<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBarrier</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objCollision</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define cor
cor = Cor.White;
sprite_index = - 1;
mask_index = sprBarrier;
playerColide = false;
//player esta acima da plataforma, ou colidiu
/////carregaPlayer = false;
//player pulou acima da plataforma
/////isJumping = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ativa ou desativa máscara de colisão de acordo com cor
if (global.pause) exit;

var barrierXDireita = round(x + sprite_get_width(sprBarrier) * image_xscale);
var barrierYAbaixo = round(y + sprite_get_height(sprBarrier) * image_yscale);

if (CollisionCor(cor, objPlayer.cor) &amp;&amp; playerColide == false)
        mask_index = sprBarrier;
    else
        mask_index = -1;
//se esta dentro
if(collision_rectangle(x+abs(objPlayer.horizontalSpeed), y+1, barrierXDireita-5-abs(objPlayer.horizontalSpeed), barrierYAbaixo-1, objPlayer, false, true)!=noone) 
{    
    mask_index = -1;
    playerColide = true;
}
//fora do objeto
else if (collision_rectangle(x, y, barrierXDireita, barrierYAbaixo, objPlayer, false, true)==noone) 
    playerColide = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Apenas desenha o sprite, sem máscaras de colisão, muda cor
///MudaCor(cor);

var hue = 255;
switch (cor)
{
    case Cor.Red   : hue = 0; break;
    case Cor.Green : hue = 80; break;
    case Cor.Blue  : hue = 160; break; 
    case Cor.White : hue = 255; break;
}
if( shader_is_compiled(shaTrocaCor) )
{    
    shader_set(shaTrocaCor);
    shader_set_uniform_f(shader_get_uniform(shaTrocaCor,"hue"),hue);
    if (instance_exists(objPlayer))
    {
        if (objPlayer.cor != cor)
            shader_set_uniform_f(shader_get_uniform(shaTrocaCor,"light"),0.5);
                else
            shader_set_uniform_f(shader_get_uniform(shaTrocaCor,"light"),1.0);
    }
    draw_sprite_ext(sprBarrier, 0, x, y, image_xscale, image_yscale,image_angle, c_white, 1);

    shader_reset();
}else{
    show_debug_message("shaTrocaCor nao compilou");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
