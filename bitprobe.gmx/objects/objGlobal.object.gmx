<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Constantes

// CORES - O JOGO TODO SERÁ BASEADO NESTA PORRA
enum Cor
{
    Red,
    Green,
    Blue,
    White
}
// DIREÇÕES DE QUALQUER PERSONAGEMS
enum Direction
{
    Up,
    Down,
    Left,
    Right,
    JumpLeft,
    JumpRight,
    Horizontal,
    Vertical
}

// COMBINAÇÕES DE CORES
enum Combinacao
{
    Red,
    Green,
    Blue,
    White,
    RedGreen,
    RedBlue,
    RedWhite,
    BlueGreen,
    BlueWhite,
    GreenWhite,
    RedGreenWhite,
    RedBlueWhite,
    RedGreenBlue,
    RedGreenBlueWhite  
}
// COMBINAÇÕES DE CORES



//Map Sprites Player
globalvar mapSprites; global.mapSprites = ds_map_create();
/*
ds_map_add(global.mapSprites, "sprPlayerRedMove", sprPlayerRedMove);
ds_map_add(global.mapSprites, "sprPlayerRedIdle", sprPlayerRedIdle);
ds_map_add(global.mapSprites, "sprPlayerRedJumpStart", sprPlayerRedJumpStart);
ds_map_add(global.mapSprites, "sprPlayerRedRun", sprPlayerRedRun);
ds_map_add(global.mapSprites, "sprPlayerRedDie", sprPlayerRedDie);
ds_map_add(global.mapSprites, "sprPlayerRedJumpEnd", sprPlayerRedJumpEnd);
ds_map_add(global.mapSprites, "sprPlayerRedAscend", sprPlayerRedAscend);
ds_map_add(global.mapSprites, "sprPlayerRedDescend", sprPlayerRedDescend);

ds_map_add(global.mapSprites, "sprPlayerGreenMove", sprPlayerGreenMove);
ds_map_add(global.mapSprites, "sprPlayerGreenIdle", sprPlayerGreenIdle);
ds_map_add(global.mapSprites, "sprPlayerGreenJumpStart", sprPlayerGreenJumpStart);
ds_map_add(global.mapSprites, "sprPlayerGreenRun", sprPlayerGreenRun);
ds_map_add(global.mapSprites, "sprPlayerGreenDie", sprPlayerGreenDie);
ds_map_add(global.mapSprites, "sprPlayerGreenJumpEnd", sprPlayerGreenJumpEnd);
ds_map_add(global.mapSprites, "sprPlayerGreenAscend", sprPlayerGreenAscend);
ds_map_add(global.mapSprites, "sprPlayerGreenDescend", sprPlayerGreenDescend);

ds_map_add(global.mapSprites, "sprPlayerBlueMove", sprPlayerBlueMove);
ds_map_add(global.mapSprites, "sprPlayerBlueIdle", sprPlayerBlueIdle);
ds_map_add(global.mapSprites, "sprPlayerBlueJumpStart", sprPlayerBlueJumpStart);
ds_map_add(global.mapSprites, "sprPlayerBlueRun", sprPlayerBlueRun);
ds_map_add(global.mapSprites, "sprPlayerBlueDie", sprPlayerBlueDie);
ds_map_add(global.mapSprites, "sprPlayerBlueJumpEnd", sprPlayerBlueJumpEnd);
ds_map_add(global.mapSprites, "sprPlayerBlueAscend", sprPlayerBlueAscend);
ds_map_add(global.mapSprites, "sprPlayerBlueDescend", sprPlayerBlueDescend);
*/
ds_map_add(global.mapSprites, "sprPlayerMove", sprPlayerMove);
ds_map_add(global.mapSprites, "sprPlayerIdle", sprPlayerIdle);
ds_map_add(global.mapSprites, "sprPlayerJumpStart", sprPlayerJumpStart);
ds_map_add(global.mapSprites, "sprPlayerRun", sprPlayerRun);
ds_map_add(global.mapSprites, "sprPlayerDie", sprPlayerDie);
ds_map_add(global.mapSprites, "sprPlayerJumpEnd", sprPlayerJumpEnd);
ds_map_add(global.mapSprites, "sprPlayerAscend", sprPlayerAscend);
ds_map_add(global.mapSprites, "sprPlayerDescend", sprPlayerDescend);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variáveis de controle
globalvar keyLeft;keyLeft = 0;
globalvar keyRight;keyRight = 0;
globalvar keyJump;keyJump = 0;
globalvar keyRed;keyRed = 0;
globalvar keyGreen;keyGreen = 0;
globalvar keyBlue;keyBlue = 0;

//Variável controle de pausa
globalvar pause; pause = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Loading...

//Map Sprites Player

//Cria mapa para Save/Load
MapasSaveLoad();

// Carregar configurações
ini_open("bitprobe.ini");
global.enableAudio = ini_read_real("settings", "audio", true);
global.enableMusic = ini_read_real("settings", "music", true);
ini_close();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toca música de abertura
PlaySound(sndAbertura, true, true);
sound_volume(sndAbertura, 0.7);
//Cria player persistente
////instance_create(352, 32, objPlayer);
////objPlayer.visible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
